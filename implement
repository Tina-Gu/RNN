#RNN
import torch
import torchvision
from torch import nn
import matplotlib.pyplot as plt
import torchvision.transforms as transforms


class rnn(nn.Module):
    def __int__(self,input_size,hidden_size,output_size,layer):
        super(rnn,self).__int__()
        self.lstm = nn.LSTM(input_size,hidden_size,layer,layer)
        self.full_connetion = nn.Linear(hidden_size, output_size)
        
    def forward(self,x):
        self.hidden_cell = (torch.zeros(1, len(x), hidden_size), torch.zeros(1, len(x), hidden_size))
        output, (_, _) = self.lstm(x, hidden_cell)
        output = self.full_connection(output[-1, :, :])
        return output
model = rnn()

        
        


        
